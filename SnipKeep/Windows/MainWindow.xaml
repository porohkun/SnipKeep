<Window x:Class="SnipKeep.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SnipKeep"
        mc:Ignorable="d"
        Title="{Binding Source={x:Static local:Settings.Title}}"
        Width="{Binding  Path=(local:Settings.GUI_MainWindow_Width), Mode=TwoWay}" MinWidth="560"
        Height="{Binding Path=(local:Settings.GUI_MainWindow_Height), Mode=TwoWay}" MinHeight="400"
        WindowState="{Binding Path=(local:Settings.GUI_MainWindow_State), Mode=TwoWay}"
        Closing="MainWindow_OnClosing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="b2v" />
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Open"                               Executed="CommandBinding_LoadLib"       CanExecute="CommonCommandBinding_CanExecute" />
        <CommandBinding Command="Save"                               Executed="CommandBinding_SaveLib"       CanExecute="CommonCommandBinding_CanExecute" />
        <CommandBinding Command="Close"                              Executed="CommandBinding_Close"         CanExecute="CommonCommandBinding_CanExecute" />
        <CommandBinding Command="local:CustomCommands.CopyCode"      Executed="CommandBinding_CopyCode"      CanExecute="CommonCommandBinding_CanExecute" />
        <CommandBinding Command="local:CustomCommands.DeleteSnippet" Executed="CommandBinding_DeleteSnippet" CanExecute="CommonCommandBinding_CanExecute" />
        <CommandBinding Command="local:CustomCommands.AboutWindow"   Executed="CommandBinding_AboutWindow"   CanExecute="CommonCommandBinding_CanExecute" />
    </Window.CommandBindings>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="Reload Library" Command="Open"/>
                <MenuItem Header="Save Library" Command="Save"/>
                <Separator/>
                <MenuItem Header="E_xit" Command="Close"/>
            </MenuItem>
            <MenuItem Header="_Snippet">
                <MenuItem Header="_New" ItemsSource="{Binding MenuItems}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/plus.png"/>
                    </MenuItem.Icon>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                    <MenuItem.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:MenuItemViewModel}" >
                            <!--ItemsSource="{Binding Path=MenuItems}">-->
                            <TextBlock Text="{Binding Header}"/>
                        </HierarchicalDataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <MenuItem Header="_Copy code" Command="local:CustomCommands.CopyCode">
                    <MenuItem.Icon>
                        <Image Source="/Icons/copy.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="E_xport" IsEnabled="False"/>
                <MenuItem Header="_Remove" Command="local:CustomCommands.DeleteSnippet">
                    <MenuItem.Icon>
                        <Image Source="/Icons/cross.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="local:CustomCommands.AboutWindow"/>
            </MenuItem>
        </Menu>
        <Menu DockPanel.Dock="Top" Height="36">
            <MenuItem ItemsSource="{Binding MenuItems}">
                <!--Command="local:CustomCommands.NewSnippet"-->
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Height="32" Source="/Icons/plus.png" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <TextBlock Text="New Snippet" VerticalAlignment="Center"/>
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding Command}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
                <MenuItem.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:MenuItemViewModel}" >
                        <!--ItemsSource="{Binding Path=MenuItems}">-->
                        <TextBlock Text="{Binding Header}"/>
                    </HierarchicalDataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            <MenuItem Command="local:CustomCommands.CopyCode">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Height="32" Source="/Icons/copy.png" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <TextBlock Text="Copy Code" VerticalAlignment="Center"/>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="local:CustomCommands.DeleteSnippet">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Height="32" Source="/Icons/cross.png" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <TextBlock Text="Delete Snippet" VerticalAlignment="Center"/>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding  Path=(local:Settings.GUI_MainWindow_LeftPanelWidth), Mode=TwoWay}"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="{Binding  Path=(local:Settings.GUI_MainWindow_RightPanelWidth), Mode=TwoWay}"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Column="0" Grid.Row="0" VerticalScrollBarVisibility="Auto" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <StackPanel Orientation="Vertical">
                    <CheckBox x:Name="librTog" Content="Libraries" HorizontalContentAlignment="Left" IsChecked="True" Style="{StaticResource GroupCheckBox}"/>
                    <ListView x:Name="librariesList" ItemsSource="{Binding Libraries, Mode=OneWay}" Visibility="{Binding IsChecked,ElementName=librTog,Converter={StaticResource b2v}}" Margin="25,0,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Background="{x:Null}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <DockPanel Width="Auto" HorizontalAlignment="Stretch">
                                    <Image DockPanel.Dock="Left" Source="{Binding IconSource}"/>
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Name}"/>
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding Count}" HorizontalAlignment="Right"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <CheckBox x:Name="lablTog" Content="Labels" HorizontalContentAlignment="Left" IsChecked="True" Margin="0,10,0,0" Style="{StaticResource GroupCheckBox}"/>
                    <ListView ItemsSource="{Binding Labels, Mode=OneWay}" SelectionChanged="labelList_SelectionChanged" Visibility="{Binding IsChecked,ElementName=lablTog,Converter={StaticResource b2v}}" Margin="25,0,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Background="{x:Null}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <DockPanel Width="Auto" HorizontalAlignment="Stretch">
                                    <Image DockPanel.Dock="Left" Source="/Icons/label.png"/>
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Name}"/>
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding Count}" HorizontalAlignment="Right"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </ScrollViewer>
            <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch"/>
            <ListView Grid.Column="2" Grid.Row="0" SelectionMode="Single" SelectedItem="{Binding SelectedSnippet, Mode=TwoWay}" ItemsSource="{Binding Snippets, Mode=OneWay}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Width="Auto" HorizontalAlignment="Stretch">
                            <TextBlock DockPanel.Dock="Left" Text="{Binding Name}"/>
                            <TextBlock DockPanel.Dock="Right" Text="{Binding TagsString}" HorizontalAlignment="Right"/>
                        </DockPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <GridSplitter Grid.Column="3" Grid.Row="0" HorizontalAlignment="Stretch"/>
            <Rectangle Grid.Column="4" Grid.Row="0" Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
            <local:SnippetEditor Grid.Column="4" Grid.Row="0" x:Name="editor" Margin="5" IsEnabled="False"/>
            
            <StatusBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" BorderThickness="0,1,0,0" HorizontalContentAlignment="Stretch" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
                <StatusBarItem>
                    <StatusBarItem.Style>
                        <Style TargetType="StatusBarItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=(local:AsyncManager.Progress), Mode=OneWay}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StatusBarItem.Style>
                    <ProgressBar Width="120" Value="{Binding Path=(local:AsyncManager.Progress), Mode=OneWay}" VerticalAlignment="Stretch" Height="18"/>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Path=(local:AsyncManager.Status), Mode=OneWay}"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </DockPanel>
</Window>
